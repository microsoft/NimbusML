# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
PredefinedStopWordsRemover
"""

__all__ = ["PredefinedStopWordsRemover"]

from \
    ....internal.core.feature_extraction.text.stopwords.predefinedstopwordsremover \
    import PredefinedStopWordsRemover as core
from ....internal.utils.utils import trace


class PredefinedStopWordsRemover(core):
    """

    Remover with predefined list of stop words.

    .. remarks::
        The :py:class:`NGramFeaturizer
        <nimbusml.feature_extraction.text.NGramFeaturizer>` transform produces a
        bag of counts of
        sequences of consecutive words from a given corpus of text.
        It also offers stopwords removing. A precompiled language-specific
        lists of stop words is used in this class that includes the most
        common words from Microsoft Office.

    :param params: Additional arguments sent to compute engine.

    .. seealso::
        :py:class:`NGramFeaturizer
        <nimbusml.feature_extraction.text.NGramFeaturizer>`,
        :py:class:`CustomStopWordsRemover
        <nimbusml.feature_extraction.text.stopwords.CustomStopWordsRemover>`,

    .. index:: transform, featurizer, text

    Example:
       .. literalinclude:: /../nimbusml/examples/NGramFeaturizer.py
              :language: python
    """

    @trace
    def __init__(
            self,
            **params):
        core.__init__(
            self,
            **params)

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
