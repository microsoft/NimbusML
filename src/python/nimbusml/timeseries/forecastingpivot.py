# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
ForecastingPivot
"""

__all__ = ["ForecastingPivot"]


from sklearn.base import TransformerMixin

from ..base_transform import BaseTransform
from ..internal.core.timeseries.forecastingpivot import \
    ForecastingPivot as core
from ..internal.utils.utils import trace


class ForecastingPivot(core, BaseTransform, TransformerMixin):
    """
    **Description**
        Pivots the input colums and drops any rows with N/A

    :param columns: see `Columns </nimbusml/concepts/columns>`_.

    :param columns_to_pivot: List of columns to pivot.

    :param horizon_column_name: Name of the horizon column generated.

    :param params: Additional arguments sent to compute engine.

    """

    @trace
    def __init__(
            self,
            columns_to_pivot,
            horizon_column_name='Horizon',
            columns=None,
            **params):

        if columns:
            params['columns'] = columns
        BaseTransform.__init__(self, **params)
        core.__init__(
            self,
            columns_to_pivot=columns_to_pivot,
            horizon_column_name=horizon_column_name,
            **params)
        self._columns = columns

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
