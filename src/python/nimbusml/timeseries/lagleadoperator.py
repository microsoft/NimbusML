# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
LagLeadOperator
"""

__all__ = ["LagLeadOperator"]


from sklearn.base import TransformerMixin

from ..base_transform import BaseTransform
from ..internal.core.timeseries.lagleadoperator import LagLeadOperator as core
from ..internal.utils.utils import trace


class LagLeadOperator(core, BaseTransform, TransformerMixin):
    """
    **Description**
        Uses the offset list with the horizon to create lags and leads

    :param columns: see `Columns </nimbusml/concepts/columns>`_.

    :param grain_columns: List of grain columns.

    :param horizon: Maximum horizon value.

    :param offsets: Lag and Lead offset to use. A negative number is a lag,
        positive is a lead.

    :param params: Additional arguments sent to compute engine.

    """

    @trace
    def __init__(
            self,
            grain_columns,
            offsets,
            horizon=0,
            columns=None,
            **params):

        if columns:
            params['columns'] = columns
        BaseTransform.__init__(self, **params)
        core.__init__(
            self,
            grain_columns=grain_columns,
            offsets=offsets,
            horizon=horizon,
            **params)
        self._columns = columns

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
