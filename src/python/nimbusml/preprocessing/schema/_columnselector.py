# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
ColumnSelector
"""

__all__ = ["ColumnSelector"]


from sklearn.base import TransformerMixin

from ...base_transform import BaseTransform
from ...internal.core.preprocessing.schema._columnselector import \
    ColumnSelector as core
from ...internal.utils.utils import trace


class ColumnSelector(core, BaseTransform, TransformerMixin):
    """

    Selects a set of columns to retrain, dropping all others.

    :param columns: a list of strings representing the column names to
        perform the transformation on.

        The << operator can be used to set this value (see
        `Column Operator </nimbusml/concepts/columns>`_)

        For example
         * ColumnSelector(columns=['education', 'age'])
         * ColumnSelector() << ['education', 'age']

        For more details see `Columns </nimbusml/concepts/columns>`_.

    :param params: Additional arguments sent to compute engine.

    .. seealso::
        :py:class:`ColumnConcatenator
        <nimbusml.preprocessing.schema.ColumnConcatenator>`,
        :py:class:`ColumnDropper
        <nimbusml.preprocessing.schema.ColumnDropper>`.

    .. index:: transform, schema

    Example:
       .. literalinclude:: /../nimbusml/examples/ColumnSelector.py
              :language: python
    """

    @trace
    def __init__(
            self,
            columns=None,
            **params):

        if columns:
            params['columns'] = columns
        BaseTransform.__init__(self, **params)
        core.__init__(
            self,
            **params)
        self._columns = columns

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
