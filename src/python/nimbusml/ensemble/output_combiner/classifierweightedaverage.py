# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
ClassifierWeightedAverage
"""

__all__ = ["ClassifierWeightedAverage"]


from ...internal.core.ensemble.output_combiner.classifierweightedaverage import \
    ClassifierWeightedAverage as core
from ...internal.utils.utils import trace


class ClassifierWeightedAverage(core):
    """
    **Description**
        Computes the weighted average of the outputs of the trained models

    :param weightage_name: The metric type to be used to find the weights for
        each model.

    :param normalize: Whether to normalize the output of base models before
        combining them.

    :param params: Additional arguments sent to compute engine.

    """

    @trace
    def __init__(
            self,
            weightage_name='AccuracyMicroAvg',
            normalize=True,
            **params):
        core.__init__(
            self,
            weightage_name=weightage_name,
            normalize=normalize,
            **params)

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
