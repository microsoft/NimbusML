# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
RegressorStacking
"""

__all__ = ["RegressorStacking"]


from ...internal.core.ensemble.output_combiner.regressorstacking import \
    RegressorStacking as core
from ...internal.utils.utils import trace


class RegressorStacking(core):
    """
    **Description**
        Computes the output by training a model on a training set where each instance is a vector containing the outputs of the different models on a training instance, and the instance's label

    :param validation_dataset_proportion: The proportion of instances to be
        selected to test the individual base learner. If it is 0, it uses
        training set.

    :param params: Additional arguments sent to compute engine.

    """

    @trace
    def __init__(
            self,
            validation_dataset_proportion=0.3,
            **params):
        core.__init__(
            self,
            validation_dataset_proportion=validation_dataset_proportion,
            **params)

    def get_params(self, deep=False):
        """
        Get the parameters for this operator.
        """
        return core.get_params(self)
