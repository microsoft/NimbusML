# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
RandomPartitionSelector
"""

__all__ = ["RandomPartitionSelector"]


from ....entrypoints._ensemblefeatureselector_allfeatureselector import \
    all_feature_selector
from ....utils.entrypoints import Component
from ....utils.utils import trace, try_set


class RandomPartitionSelector(Component):
    """
    **Description**
        Randomly partitions the rows for each trainer in the ensemble

    :param feature_selector: The Feature selector.

    :param params: Additional arguments sent to compute engine.

    """

    @trace
    def __init__(
            self,
            feature_selector=None,
            **params):

        self.feature_selector = feature_selector
        self.kind = 'EnsembleSubsetSelector'
        self.name = 'RandomPartitionSelector'
        self.settings = {}

        if feature_selector is not None:
            self.settings['FeatureSelector'] = try_set(
                obj=feature_selector, none_acceptable=True, is_of_type=dict)

        super(
            RandomPartitionSelector,
            self).__init__(
            name=self.name,
            settings=self.settings,
            kind=self.kind)
