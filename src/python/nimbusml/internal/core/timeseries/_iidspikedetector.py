# --------------------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------------------------------------
# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
IidSpikeDetector
"""

__all__ = ["IidSpikeDetector"]


from ...entrypoints.timeseriesprocessingentrypoints_iidspikedetector import \
    timeseriesprocessingentrypoints_iidspikedetector
from ...utils.utils import trace
from ..base_pipeline_item import BasePipelineItem, DefaultSignature


class IidSpikeDetector(BasePipelineItem, DefaultSignature):
    """

    This transform detects the spikes in a i.i.d. sequence using adaptive
    kernel density estimation.

    .. remarks::
        ``IIDSpikeDetector`` assumes a sequence of data points that are
        independently sampled from one stationary
        distribution. `Adaptive kernel density estimation
        <https://en.wikipedia.org/wiki/Variable_kernel_density_estimation>`_
        is used to model the distribution.
        The `p-value <https://en.wikipedia.org/wiki/P-value>`_ score
        indicates the likelihood of the current observation according to
        the estimated distribution. The lower its value, the more likely the
        current point is an outlier.

    :param confidence: The confidence for spike detection in the range [0,
        100].

    :param side: The argument that determines whether to detect positive or
        negative anomalies, or both. Available options are {``Positive``,
        ``Negative``, ``TwoSided``}.

    :param pvalue_history_length: The size of the sliding window for computing
        the p-value.

    :param params: Additional arguments sent to compute engine.

    .. seealso::
        :py:func:`IIDChangePointDetector
        <nimbusml.preprocessing.timeseries.IIDChangePointDetector>`,
        :py:func:`SsaSpikeDetector
        <nimbusml.preprocessing.timeseries.SsaSpikeDetector>`,
        :py:func:`SsaChangePointDetector
        <nimbusml.preprocessing.timeseries.SsaChangePointDetector>`.

    .. index:: models, timeseries, transform

    Example:
       .. literalinclude:: /../nimbusml/examples/examples_from_dataframe/IidSpikeDetector_df.py
              :language: python
    """

    @trace
    def __init__(
            self,
            confidence=99.0,
            side='TwoSided',
            pvalue_history_length=100,
            **params):
        BasePipelineItem.__init__(
            self, type='transform', **params)

        self.confidence = confidence
        self.side = side
        self.pvalue_history_length = pvalue_history_length

    @property
    def _entrypoint(self):
        return timeseriesprocessingentrypoints_iidspikedetector

    @trace
    def _get_node(self, **all_args):
        algo_args = dict(
            source=self.source,
            name=self._name_or_source,
            confidence=self.confidence,
            side=self.side,
            pvalue_history_length=self.pvalue_history_length)

        all_args.update(algo_args)
        return self._entrypoint(**all_args)
