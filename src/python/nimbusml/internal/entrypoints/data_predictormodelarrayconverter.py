# - Generated by tools/entrypoint_compiler.py: do not edit by hand
"""
Data.PredictorModelArrayConverter
"""


from ..utils.entrypoints import EntryPoint
from ..utils.utils import try_set, unlist


def data_predictormodelarrayconverter(
        models,
        output_models,
        **params):
    """
    **Description**
        Create an array variable of PredictorModel

    :param models: The models (inputs).
    :param output_models: The model array (outputs).
    """

    entrypoint_name = 'Data.PredictorModelArrayConverter'
    inputs = {}
    outputs = {}

    if models is not None:
        inputs['Models'] = try_set(
            obj=models,
            none_acceptable=False,
            is_of_type=list)
    if output_models is not None:
        outputs['OutputModels'] = try_set(
            obj=output_models,
            none_acceptable=False,
            is_of_type=list)

    input_variables = {
        x for x in unlist(inputs.values())
        if isinstance(x, str) and x.startswith("$")}
    output_variables = {
        x for x in unlist(outputs.values())
        if isinstance(x, str) and x.startswith("$")}

    entrypoint = EntryPoint(
        name=entrypoint_name, inputs=inputs, outputs=outputs,
        input_variables=input_variables,
        output_variables=output_variables)
    return entrypoint
