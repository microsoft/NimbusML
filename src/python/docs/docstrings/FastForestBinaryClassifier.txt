    """

    Machine Learning Fast Forest

    .. remarks::
        Decision trees are non-parametric models that perform a sequence of
        simple tests on inputs. This decision procedure maps them to outputs
        found in the training dataset whose inputs were similar to the
        instance
        being processed. A decision is made at each node of the binary tree
        data
        structure based on a measure of similarity that maps each instance
        recursively through the branches of the tree until the appropriate
        leaf
        node is reached and the output decision returned.

        Decision trees have several advantages:

        * They are efficient in both computation and memory usage during
          training and prediction.
        * They can represent non-linear decision boundaries.
        * They perform integrated feature selection and classification.
        * They are resilient in the presence of noisy features.

        Fast forest classifier is a random forest and quantile regression
        forest
        implementation using the tree learner in
        :py:class:`FastTreesBinaryClassifier
        <nimbusml.ensemble.FastTreesBinaryClassifier>`. The model consists of an
        ensemble of decision trees. 


        **Reference**
    
            `Wikipedia: Random forest
            <http://en.wikipedia.org/wiki/Random_forest>`_
    
            `Quantile regression forest
            <http://jmlr.org/papers/volume7/meinshausen06a/meinshausen06a.pdf>`_
    
            `From Stumps to Trees to Forests
            <https://blogs.technet.microsoft.com/machinelearning/2014/09/10/from-
            stumps-to-trees-to-forests/>`_
    

    .. seealso::
        :py:class:`FastTreesBinaryClassifier
        <nimbusml.ensemble.FastTreesBinaryClassifier>`,
        :py:class:`FastForestRegressor
        <nimbusml.ensemble.FastForestRegressor>`

    .. index:: models, classification, regression

    Example:
       .. literalinclude:: /../nimbusml/examples/FastForestBinaryClassifier.py
              :language: python
    """