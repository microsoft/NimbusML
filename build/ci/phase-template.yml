parameters:
  name: ''
  buildScript: ''
  buildMatrix: {}
  buildQueue: {}
  testDistro: ''
  testOptions: ''

phases:

- phase: ${{ parameters.name }}
  variables:
    _buildScript: ${{ parameters.buildScript }}
    _dockerRun: docker run -e SYSTEM_TEAMFOUNDATIONCOLLECTIONURI="$(System.TeamFoundationCollectionUri)" -e BUILD_BUILDNUMBER="$(Build.BuildNumber)" -i -v $(Build.SourcesDirectory):/builddir -w="/builddir"
    _distro: ${{ parameters.testDistro }}
    _testOptions: ${{ parameters.testOptions }}
  queue:
   parallel: 99
   matrix:
     ${{ insert }}: ${{ parameters.buildMatrix }}
   ${{ insert }}: ${{ parameters.buildQueue }}
  steps:

  # Windows phases
  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: $(_buildScript) --configuration $(_configuration) --runTests $(_testOptions)
  # Mac phases
  - ${{ if eq(parameters.name, 'Mac') }}:
    - script: brew update && brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/f5b1ac99a7fba27c19cee0bc4f036775c889b359/Formula/libomp.rb mono-libgdiplus gettext && brew link gettext --force
    - ${{ if eq(parameters.testDistro, 'noTests') }}:
      - script: chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration)
    - ${{ if eq(parameters.testDistro, '') }}:
      - script: chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --runTests $(_testOptions)
  # Linux phases
  - ${{ if or(eq(parameters.name, 'Linux_Ubuntu16'), eq(parameters.name, 'Linux_Ubuntu14'), eq(parameters.name, 'Linux_CentOS7')) }}:
    - script: $(_dockerRun) mlnet/ubuntu16-nativebuild:0.1 bash -c "source /etc/profile && chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --buildNativeBridgeOnly"
      displayName: Build native bridge
    - script: $(_dockerRun) mlnet/ubuntu16-general:0.1 bash -c "source /etc/profile && chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --skipNativeBridge"
      displayName: Build python wheel
    - ${{ if eq(parameters.testDistro, 'ubuntu16') }}:
      - script: $(_dockerRun) mlnet/ubuntu16-general:0.1 bash -c "source /etc/profile && chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --runTestsOnly $(_testOptions)"
        displayName: Run tests Ubuntu16
    - ${{ if eq(parameters.testDistro, 'ubuntu14') }}:
      - script: $(_dockerRun) mlnet/ubuntu14-general:0.1 bash -c "source /etc/profile && chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --runTestsOnly $(_testOptions)"
        displayName: Run tests Ubuntu14
    - ${{ if eq(parameters.testDistro, 'centos7') }}:
      - script: $(_dockerRun) mlnet/centos7-general:0.1 bash -c "source /root/.bash_profile && source /etc/profile && chmod 777 $(_buildScript) && $(_buildScript) --configuration $(_configuration) --runTestsOnly $(_testOptions)"
        displayName: Run tests CentOS7

  # Publish build artifacts
  - ${{ if or(eq(parameters.name, 'Linux_Ubuntu16'), eq(parameters.name, 'Windows'), eq(parameters.name, 'Mac')) }}:
    - task: PublishBuildArtifacts@1
      condition: and(always(), ne(variables['Build.Reason'], 'PullRequest'))
      displayName: Publish wheel file to VSTS artifacts
      inputs:
        pathToPublish: $(Build.SourcesDirectory)/target
        artifactName: NimbusML Wheels
        artifactType: container
